kubectl get crd wasmplugins.extensions.istio.io
kubectl get clusterrole istiod-istio-system
kubectl get clusterrolebinding istiod-istio-system

helm uninstall <release-name> -n istio-system

helm install istio-base istio/base -n istio-system --set defaultRevision=default --values istio_base.yaml --replace


poc_user [ ~ ]$ helm install istio istio/istio -n istio-system --set profile=demo
Error: INSTALLATION FAILED: chart "istio" matching  not found in istio index. (try 'helm repo update'): no chart name found
poc_user [ ~ ]$ 


If you're unable to access Kiali on a browser after setting it up as a `LoadBalancer` or another service type, let's troubleshoot the issue step by step.

### 1. **Check the Service**:
Ensure the Kiali service is up and has an external IP:

```bash
kubectl get svc kiali -n istio-system
```

Check the `TYPE` and `EXTERNAL-IP` columns. If it's a `LoadBalancer`, make sure there's an IP address assigned under the `EXTERNAL-IP` column.

### 2. **Service Logs and Events**:
Check the logs and events related to the Kiali service:

```bash
kubectl describe svc kiali -n istio-system
```

This can give clues if there's an issue with the service or with obtaining an external IP.

### 3. **Access Inside the Cluster**:
Test access to Kiali from within the cluster:

```bash
kubectl run -i --tty --rm debug --image=alpine -- sh
```

This will launch an Alpine Linux pod. Once inside:

```bash
apk add --no-cache curl
curl kiali.istio-system.svc.cluster.local:20001
```

You should get a response from Kiali. If you do, it means Kiali is accessible internally.

### 4. **Check Network and Firewall Rules**:
Depending on where your Kubernetes cluster is running, there might be network and firewall rules preventing external access:

- **Cloud Providers**: Ensure that there are no firewall rules blocking the necessary ports.
- **Local Kubernetes**: If you're using Minikube, Kind, etc., accessing services might be different.
  
### 5. **Kiali Logs**:
Check the logs of the Kiali pod to see if there's any startup error or issue:

```bash
kubectl logs -l app=kiali -n istio-system
```

### 6. **Port Forwarding (Alternative)**:
If all else fails and you just want to access Kiali from your local machine, you can use port forwarding:

```bash
kubectl port-forward svc/kiali -n istio-system 20001:20001
```

Then, go to `http://localhost:20001` on your browser.

### 7. **Browser Issues**:
- Ensure you're not encountering browser-specific issues. Try accessing Kiali in an incognito/private window or a different browser.
- Check if there's any proxy or VPN that might be interfering with the connection.

### 8. **Reinstall/Reset**:
If you've tried the above and still can't access Kiali, consider uninstalling and reinstalling it.

Remember: Whenever you're exposing a service, especially if it's for production use, always make sure it's secure. Directly exposing Kiali with a LoadBalancer without any protection isn't recommended for non-testing scenarios. Consider setting up Ingress with authentication and HTTPS for production uses.



poc_user [ ~ ]$ kubectl run -i --tty --rm debug --image=alpine -- sh
If you don't see a command prompt, try pressing enter.
/ # apk add --no-cache curl
fetch https://dl-cdn.alpinelinux.org/alpine/v3.18/main/x86_64/APKINDEX.tar.gz
fetch https://dl-cdn.alpinelinux.org/alpine/v3.18/community/x86_64/APKINDEX.tar.gz
(1/7) Installing ca-certificates (20230506-r0)
(2/7) Installing brotli-libs (1.0.9-r14)
(3/7) Installing libunistring (1.1-r1)
(4/7) Installing libidn2 (2.3.4-r1)
(5/7) Installing nghttp2-libs (1.55.1-r0)
(6/7) Installing libcurl (8.2.1-r0)
(7/7) Installing curl (8.2.1-r0)
Executing busybox-1.36.1-r2.trigger
Executing ca-certificates-20230506-r0.trigger
OK: 12 MiB in 22 packages
/ # curl kiali.istio-system.svc.cluster.local:20001
curl: (7) Failed to connect to kiali.istio-system.svc.cluster.local port 20001 after 5 ms: Couldn't connect to server
/ # curl -v http://20.24.125.8:20001
* processing: http://20.24.125.8:20001
*   Trying 20.24.125.8:20001...
* connect to 20.24.125.8 port 20001 failed: Connection refused
* Failed to connect to 20.24.125.8 port 20001 after 0 ms: Couldn't connect to server
* Closing connection
curl: (7) Failed to connect to 20.24.125.8 port 20001 after 0 ms: Couldn't connect to server
/ # 


poc_user [ ~ ]$ kubectl get po -n istio-system -l app=kiali
NAME                     READY   STATUS             RESTARTS       AGE
kiali-5c4b64b7d9-8pbr7   0/1     CrashLoopBackOff   12 (37s ago)   37m
poc_user [ ~ ]$ kubectl logs -l app=kiali -n istio-system
{"level":"info","time":"2023-08-21T08:56:16Z","message":"Adding a RegistryRefreshHandler"}
2023-08-21T08:56:16Z INF Kiali: Version: v1.72.0, Commit: 7208cd1767e8347b00bff10391130d7bcc824548, Go: 1.20.5
2023-08-21T08:56:16Z INF Using authentication strategy [login]
2023-08-21T08:56:16Z FTL Invalid authentication strategy [login]
poc_user [ ~ ]$ 



kubectl get configmap kiali -n istio-system -o jsonpath='{.data.config\.yaml}' | less
kubectl edit configmap kiali -n istio-system



/ # curl -v http://20.239.30.137:20001
* processing: http://20.239.30.137:20001
*   Trying 20.239.30.137:20001...
* Connected to 20.239.30.137 (20.239.30.137) port 20001
> GET / HTTP/1.1
> Host: 20.239.30.137:20001
> User-Agent: curl/8.2.1
> Accept: */*
> 
< HTTP/1.1 302 Found
< content-type: text/html; charset=utf-8
< location: /kiali/
< vary: Accept-Encoding
< date: Mon, 21 Aug 2023 09:21:10 GMT
< content-length: 30
< x-envoy-upstream-service-time: 0
< server: istio-envoy
< x-envoy-decorator-operation: kiali.istio-system.svc.cluster.local:20001/*
< 
<a href="/kiali/">Found</a>.

* Connection #0 to host 20.239.30.137 left intact
/ # curl kiali.istio-system.svc.cluster.local:20001
<a href="/kiali/">Found</a>.

/ # 


poc_user [ ~ ]$ http://20.239.30.137:20001/kiali/
bash: http://20.239.30.137:20001/kiali/: No such file or directory
poc_user [ ~ ]$ curl -v http://20.239.30.137:20001/kiali/
*   Trying 20.239.30.137:20001...


poc_user [ ~ ]$ kubectl logs -l app=kiali -n istio-system
E0821 09:10:39.007896       1 reflector.go:148] pkg/mod/k8s.io/client-go@v0.27.2/tools/cache/reflector.go:231: Failed to watch *v1.StatefulSet: failed to list *v1.StatefulSet: Get "https://10.0.0.1:443/apis/apps/v1/statefulsets?limit=500&resourceVersion=0": dial tcp 10.0.0.1:443: connect: connection refused
W0821 09:10:39.007992       1 reflector.go:533] pkg/mod/k8s.io/client-go@v0.27.2/tools/cache/reflector.go:231: failed to list *v1.DaemonSet: Get "https://10.0.0.1:443/apis/apps/v1/daemonsets?limit=500&resourceVersion=0": dial tcp 10.0.0.1:443: connect: connection refused
E0821 09:10:39.008031       1 reflector.go:148] pkg/mod/k8s.io/client-go@v0.27.2/tools/cache/reflector.go:231: Failed to watch *v1.DaemonSet: failed to list *v1.DaemonSet: Get "https://10.0.0.1:443/apis/apps/v1/daemonsets?limit=500&resourceVersion=0": dial tcp 10.0.0.1:443: connect: connection refused
W0821 09:10:39.008080       1 reflector.go:533] pkg/mod/k8s.io/client-go@v0.27.2/tools/cache/reflector.go:231: failed to list *v1.Service: Get "https://10.0.0.1:443/api/v1/services?limit=500&resourceVersion=0": dial tcp 10.0.0.1:443: connect: connection refused
E0821 09:10:39.008110       1 reflector.go:148] pkg/mod/k8s.io/client-go@v0.27.2/tools/cache/reflector.go:231: Failed to watch *v1.Service: failed to list *v1.Service: Get "https://10.0.0.1:443/api/v1/services?limit=500&resourceVersion=0": dial tcp 10.0.0.1:443: connect: connection refused
2023-08-21T09:10:40Z INF [Kiali Cache] Started
2023-08-21T09:10:40Z INF [Kiali Cache] Kube cache is active for cluster: [Kubernetes]
2023-08-21T09:10:40Z INF Server endpoint will start at [:20001/kiali]
2023-08-21T09:10:40Z INF Server endpoint will serve static content from [/opt/kiali/console]
2023-08-21T09:10:40Z INF Starting Metrics Server on [:9090]


Okay, let's clarify the situation a bit:

1. You can access Kiali metrics at `http://20.239.30.137:9090/kiali/`.
2. You cannot access the Kiali dashboard at `http://20.239.30.137:20001/kiali/`.

Given the above, it sounds like the metrics service for Kiali is working, but the main dashboard isn't accessible.

Here are a few steps you can take to potentially resolve the issue:

1. **Check Kiali Service Configuration**:
    First, verify that the Kiali service is correctly configured to expose port `20001`.
   
   ```bash
   kubectl get svc kiali -n istio-system -o jsonpath='{.spec.ports[?(@.port==20001)]}'
   ```

   You should see an output for the port configuration for `20001`.

2. **Kiali Configurations**:
   Ensure that Kiali's configurations are set up correctly. Especially, see if there's any override for its base URL or any other configuration that might be affecting its accessibility.

   ```bash
   kubectl get configmaps kiali -n istio-system -o json | jq '.data'
   ```

   You can check the returned configurations to see if everything seems right.

3. **Istio Ingress Configuration**:
   If you're using Istio's ingress gateway to access Kiali, make sure the configurations are correct. Check the VirtualService and Gateway for Kiali:

   ```bash
   kubectl get virtualservices,gateway -n istio-system
   ```

   Ensure they're set up to route traffic correctly for Kiali.

4. **Direct Port-Forwarding**:
   As a way to narrow down the issue, you can use `kubectl port-forward` to directly forward the Kiali service to your local machine and see if you can access it:

   ```bash
   kubectl port-forward svc/kiali -n istio-system 20001:20001
   ```

   Now, try accessing `http://localhost:20001/kiali/` from your browser. If you can access Kiali this way, the issue may be with the way traffic is being routed in your cluster.

5. **Browser and Network Issues**:
   Sometimes, the problem can be related to browser configurations, caches, or even network issues:

   - Try accessing the Kiali dashboard in an incognito/private mode to bypass cache.
   - Try a different browser.
   - Check if any browser extensions might be blocking the page.
   - Check network configurations/firewalls in your environment.

6. **Logs & Events**:
   While you've already checked logs, it's a good idea to look for any events related to the Kiali service or its related pods:

   ```bash
   kubectl describe svc/kiali -n istio-system
   kubectl describe pods -l app=kiali -n istio-system
   ```

7. **Reinstall/Upgrade Kiali**:
   If everything else fails, consider uninstalling and reinstalling Kiali. Sometimes a fresh installation can fix underlying issues. Also, consider upgrading Kiali if an upgrade is available; the newer version may have fixes for your problem.

8. **Check Istio's Sidecar Configuration**:
   If Kiali has an Istio sidecar, ensure it's correctly set up. Incorrect Istio configurations can affect pod-to-pod communication.

Lastly, Kiali has an active community, and issues like these can be discussed in their forums or GitHub issues. If you believe this might be a bug or if you need specific help related to Kiali, consider reaching out directly to the Kiali community.
